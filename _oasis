OASISFormat: 0.4
Name:        sugar
Version:     0.1
Synopsis:    A library to bring sugar syntatic to your error handling layer.
Authors:     Gerson Moraes <gerson@digirati.com.br>
License:     MIT

Plugins:     META (0.4), DevFiles (0.4)
BuildTools:  ocamlbuild

# Flags
# ---------------------------------------------------------------------

Flag all
  Description:   Build everything possible
  Default:       false

Flag "lwt"
  Description:   Build the Lwt library
  Default$:      flag(all)

Flag "async"
  Description:   Build the Async library
  Default$:      flag(all)

Flag "example"
  Description:   Build the examples
  Default$:      flag(all)

# Libraries
# ---------------------------------------------------------------------

Library "sugar_lwt"
  Build$:           flag(lwt)
  Install$:         flag(lwt)
  FindlibName:      lwt
  FindlibParent:    sugar
  Path:             lib/lwt
  CompiledObject:   best
  Modules:          Sugar_lwt
  BuildDepends:     threads, lwt, sugar
  XMETADescription: A library to bring sugar syntatic to your error handling layer.

Library "sugar_async"
  Build$:           flag(async)
  Install$:         flag(async)
  FindlibName:      async
  FindlibParent:    sugar
  Path:             lib/async
  Modules:          Sugar_async
  CompiledObject:   best
  BuildDepends:     threads, async, sugar
  XMETADescription: A library to bring sugar syntatic to your error handling layer.

Library "sugar"
  FindlibName:      sugar
  Path:             lib/sugar
  Modules:          Sugar_promise, Sugar_types, Sugar_option, Sugar_result, Sugar
  CompiledObject:   best
  XMETADescription: A library to bring sugar syntatic to your error handling layer.


# Libraries
# ---------------------------------------------------------------------

Executable "example_basic"
  Build$:         flag(example)
  Install:        false
  Path:           examples/basic
  MainIs:         example_basic.ml
  CompiledObject: best
  BuildDepends:   sugar

Executable "example_lwt"
  Build$:         flag(example) && flag(lwt)
  Install:        false
  Path:           examples/lwt
  MainIs:         example_lwt.ml
  CompiledObject: best
  BuildDepends:   lwt, lwt.unix, sugar, sugar.lwt

Executable "example_async"
  Build$:         flag(example) && flag(async)
  Install:        false
  Path:           examples/async
  MainIs:         example_async.ml
  CompiledObject: best
  BuildDepends:   async, async_unix, sugar, sugar.async

Executable "example_semicolon"
  Build$:         flag(example) && flag(lwt)
  Install:        false
  Path:           examples/semicolon
  MainIs:         example_semicolon.ml
  CompiledObject: best
  BuildDepends:   lwt, lwt.unix, sugar, sugar.lwt
